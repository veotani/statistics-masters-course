import numpy as np

# TODO: Оформить в ввиде функции с параметрами (X, F)
# TODO: Где X - выборка, А F - функция распределения (lambda)
# Входные параметры
a = len('Орлов')
b = len('Антон')
n = 100

# Считаем параметры распределения и строим его
la = a/b
betta = 1/la
X = np.random.exponential(betta, n)

# Построим функцию F и Fn для поиска статистики Dn
F = np.array([1-np.exp(-la*x) for x in np.arange(min(X), max(X), 0.001)])
Fn = np.array([len(X[np.where(X<x)])/n for x in np.arange(min(X), max(X), 0.001)])
Dn = max(np.abs(F-Fn))

# Критическое значение:
D_crit = 1.36/np.sqrt(n)       # Множество таблиц ссылаются на эту формулу при уровне значимости alpha = 0.95
                               # Она используется только при значениях n > 50

# Делаем вывод
if Dn < D_crit:
    print('Dn < D_crit => гипотеза H_0 принимается и введённая выборка принадлежит введённому распределению')
else:
    print('Dn >= D_crit => гипотеза H_0 отвергается в пользу альтернативной: выборка не принадлежит изучаемому распределению')